name: Deploy terraform

on:
  workflow_dispatch:
  push:

jobs:

#---------------------------------------------------------------------------------------------------------------
# Terraform plan jobs
#---------------------------------------------------------------------------------------------------------------

  plan_stg:
    name: "Staging Plan"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment:
      name: plan-staging

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_STG}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_STG}}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Terraform Init
        run: terraform init -backend-config="key=stg-terraform.tfstate"

      - name: Terraform Plan
        id: plan
        working-directory: .
        run: |
          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          terraform plan -no-color -var-file="vars_stg.tfvars" -out=plan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Archive plan
        uses: actions/upload-artifact@v4
        with:
          name: "stg-plan"
          path: ./plan

  plan_prod:
    name: "Production Plan"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    environment:
      name: plan-production

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_PROD}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_PROD}}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Terraform Init
        run: terraform init -backend-config="key=prod-terraform.tfstate"

      - name: Terraform Plan
        id: plan
        working-directory: .
        run: |
          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          terraform plan -no-color -var-file="vars_prod.tfvars" -out=plan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Archive plan
        uses: actions/upload-artifact@v4
        with:
          name: "prod-plan"
          path: ./plan

#--------------------------------------------------------------------------------------------------------------
# Terraform deploy jobs
#--------------------------------------------------------------------------------------------------------------

  deploy_stg:
    name: "Staging Deployment"
    runs-on: ubuntu-latest
    needs: "plan_stg"
    if: github.ref == 'refs/heads/master'
    environment:
      name: apply-staging

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_STG}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_STG}}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Terraform Init
        run: terraform init -backend-config="key=stg-terraform.tfstate"

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: "stg-plan"

      - name: Terraform Apply
        run: |
          echo 'apply<<EOF' >> $GITHUB_OUTPUT
          terraform apply -input=false -no-color plan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  deploy_prod:
    name: "Production Deployment"
    runs-on: ubuntu-latest
    needs: "plan_prod"
    if: github.ref == 'refs/heads/production'
    environment:
      name: apply-production

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_PROD}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_PROD}}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Terraform Init
        run: terraform init  -backend-config="key=prod-terraform.tfstate" 

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: "prod-plan"

      - name: Terraform Apply
        run: |
          echo 'apply<<EOF' >> $GITHUB_OUTPUT
          terraform apply -input=false -no-color plan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
