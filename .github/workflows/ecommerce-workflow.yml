name: Deploy terraform

on:
  workflow_dispatch:
  push:
env:
  project: "test"

jobs:

#---------------------------------------------------------------------------------------------------------------
# Terraform plan jobs
#---------------------------------------------------------------------------------------------------------------

  plan_stg:
    name: "Staging Plan"
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.7
    if: github.ref == 'refs/heads/master'
    environment:
      name: plan-staging
    env: 
      name: "staging"
      bucket_name: "grocekeystaging-terraform-state"

    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout repo
        uses: actions/checkout@v4
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_STG}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_STG}}
          aws-region: eu-central-1
          
      - name: Terraform Init
        run: terraform init -backend-config="key=${{env.project}}/terraform.tfstate" -backend-config="bucket=${{env.bucket_name}}"

      - name: Terraform Plan
        id: plan
        working-directory: .
        run: terraform plan -no-color -var-file="vars_${{env.name}}.tfvars" -out=plan.tfplan 

      - name: Archive plan
        uses: actions/upload-artifact@v4
        with:
          name: "terraform-plan-${{env.project}}-${{env.name}}"
          path: ./plan.tfplan

  plan_prod:
    name: "Production Plan"
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.7
    if: github.ref == 'refs/heads/production'
    environment:
      name: plan-production
    env: 
      name: "production"
      bucket_name: "grocekey-terraform-state"
 
    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_PROD}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_PROD}}
          aws-region: eu-central-1

      - name: Terraform Init
        run: terraform init -backend-config="key=${{env.project}}/terraform.tfstate" -backend-config="bucket=${{env.bucket_name}}"

      - name: Terraform Plan
        id: plan
        working-directory: .
        run: 
          terraform plan -no-color -var-file="vars_${{env.name}}.tfvars" -out=plan.tfplan

      - name: Archive plan
        uses: actions/upload-artifact@v4
        with:
          name: "terraform-plan-${{env.project}}-${{env.name}}"
          path: ./plan.tfplan

#--------------------------------------------------------------------------------------------------------------
# Terraform deploy jobs
#--------------------------------------------------------------------------------------------------------------

  deploy_stg:
    name: "Staging Deployment"
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.7
    needs: "plan_stg"
    if: github.ref == 'refs/heads/master'
    environment:
      name: apply-staging
    env: 
      name: "staging"
      bucket_name: "grocekeystaging-terraform-state"

    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_STG}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_STG}}
          aws-region: eu-central-1

      - name: Terraform Init
        run: terraform init -backend-config="key=${{env.project}}/terraform.tfstate" -backend-config="bucket=${{env.bucket_name}}"

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: "terraform-plan-${{env.project}}-${{env.name}}"

      - name: Terraform Apply
        run: terraform apply -input=false -no-color plan.tfplan 
 
  deploy_prod:
    name: "Production Deployment"
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.7
    needs: "plan_prod"
    if: github.ref == 'refs/heads/production'
    environment:
      name: apply-production
    env: 
      name: "production"
      bucket_name: "grocekey-terraform-state"
  
    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID_PROD}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY_PROD}}
          aws-region: eu-central-1

      - name: Terraform Init
        run: terraform init -backend-config="key=${{env.project}}/terraform.tfstate" -backend-config="bucket=${{env.bucket_name}}"
      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: "terraform-plan-${{env.project}}-${{env.name}}"

      - name: Terraform Apply
        run: terraform apply -input=false -no-color plan.tfplan
